{"version":3,"sources":["pages/common/header/index.js","pages/common/footer/index.js","pages/home/index.js","pages/portfolio/index.js","pages/contact/index.js","Routes.js","serviceWorker.js","index.js"],"names":["Header","Layout","className","theme","selectedKeys","mode","Item","key","to","replace","Footer","style","textAlign","Home","Content","padding","margin","minHeight","Portfolio","Contact","Routes","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gTAoCeA,EA7BA,WAAO,IACVA,EAAWC,IAAXD,OAER,OACI,kBAAC,IAAD,KACI,kBAACA,EAAD,CAAQE,UAAU,0CACd,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAMC,MAAM,OAAOC,aAAc,GAAIC,KAAK,aAAaH,UAAU,2BAC7D,kBAAC,IAAKI,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,SAAO,GAApB,SAIJ,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMC,GAAG,aAAaC,SAAO,GAA7B,cAIJ,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMC,GAAG,WAAWC,SAAO,GAA3B,mBCVTC,G,OAVA,WAAO,IACVA,EAAWT,IAAXS,OAER,OACI,kBAAC,IAAD,KACI,kBAACA,EAAD,CAAQR,UAAU,0BAA0BS,MAAO,CAAEC,UAAW,WAAhE,6CCiBGC,EApBF,WAAO,IACRC,EAAYb,IAAZa,QACR,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAACA,EAAD,CAASZ,UAAU,0BAA0BS,MAAO,CAAEI,QAAS,WAC3D,kBAAC,IAAD,CAAYJ,MAAO,CAAEK,OAAQ,WACzB,kBAAC,IAAWV,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aAEJ,yBAAKJ,UAAU,yBAAyBS,MAAO,CAAEI,QAAS,GAAIE,UAAW,MAAzE,YAIJ,kBAAC,EAAD,QCFGC,G,OAfG,WAAO,IACbJ,EAAYb,IAAZa,QACR,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAACA,EAAD,CAASZ,UAAU,0BAA0BS,MAAO,CAAEI,QAAS,WAC3D,yBAAKb,UAAU,yBAAyBS,MAAO,CAAEI,QAAS,GAAIE,UAAW,MAAzE,cAIJ,kBAAC,EAAD,SCMGE,G,OAhBC,WAAO,IACXL,EAAYb,IAAZa,QAER,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAACA,EAAD,CAASZ,UAAU,0BAA0BS,MAAO,CAAEI,QAAS,WAC3D,yBAAKb,UAAU,yBAAyBS,MAAO,CAAEI,QAAS,GAAIE,UAAW,MACrE,gDAGR,kBAAC,EAAD,SCCGG,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOS,KAAK,aAAaC,UAAWL,IACpC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWJ,MCDpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4332cfb3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    const { Header } = Layout;\r\n\r\n    return (\r\n        <Layout>\r\n            <Header className=\"header-background-color header-height \">\r\n                <div className=\"logo\" />\r\n                <Menu theme='dark' selectedKeys={[]} mode=\"horizontal\" className=\"header-background-color\">\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to=\"/\" replace>\r\n                            Home\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to=\"/portfolio\" replace>\r\n                            Portfolio\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <Link to=\"/contact\" replace>\r\n                            Contact Me\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        </Layout >\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './index.css';\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from 'antd';\r\n\r\nconst Footer = () => {\r\n    const { Footer } = Layout;\r\n\r\n    return (\r\n        <Layout>\r\n            <Footer className=\"footer-background-color\" style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\r\n        </Layout >\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './index.css';\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\nimport Header from '../common/header';\r\nimport Footer from '../common/footer';\r\n\r\nconst Home = () => {\r\n    const { Content } = Layout;\r\n    return (\r\n        <Layout>\r\n            <Header />\r\n            <Content className=\"site-layout home-layout\" style={{ padding: '0 50px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\r\n                    Content\r\n                </div>\r\n            </Content>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nimport Header from '../common/header';\r\nimport Footer from '../common/footer';\r\n\r\nconst Portfolio = () => {\r\n    const { Content } = Layout;\r\n    return (\r\n        <Layout>\r\n            <Header />\r\n            <Content className=\"site-layout home-layout\" style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\r\n                    Portfolio\r\n            </div>\r\n            </Content>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './index.css';\r\nimport { Layout } from 'antd';\r\nimport Header from '../common/header';\r\nimport Footer from '../common/footer';\r\n\r\nconst Contact = () => {\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Layout>\r\n            <Header />\r\n            <Content className=\"site-layout home-layout\" style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\r\n                    <p>Contact Me Page</p>\r\n                </div>\r\n            </Content>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './Routes.css';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/home';\r\nimport Portfolio from './pages/portfolio';\r\nimport Contact from './pages/contact';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <HashRouter>\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/portfolio' component={Portfolio} />\r\n      <Route path='/contact' component={Contact} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}